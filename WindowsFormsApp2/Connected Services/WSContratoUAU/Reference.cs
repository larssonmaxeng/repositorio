//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2.WSContratoUAU {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/UAUTitanium", ConfigurationName="WSContratoUAU.wsContratoMaterialServicoSoap")]
    public interface wsContratoMaterialServicoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultaItensContratoPendente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaItensContratoPendente(int codEmpresa, string codContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultaItensContratoPendente", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaItensContratoPendenteAsync(int codEmpresa, string codContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarAprovacoesRealizadasNoContrato", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarAprovacoesRealizadasNoContrato(short empresa, short contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarAprovacoesRealizadasNoContrato", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarAprovacoesRealizadasNoContratoAsync(short empresa, short contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarContratosAprovacoesPendentes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarContratosAprovacoesPendentes(string usuario, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarContratosAprovacoesPendentes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarContratosAprovacoesPendentesAsync(string usuario, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarContratoAprovacaoPendente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarContratoAprovacaoPendente(string usuario, int empresa, string obra, int contrato, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarContratoAprovacaoPendente", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarContratoAprovacaoPendenteAsync(string usuario, int empresa, string obra, int contrato, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/QtdeContratosAprovacoesPendentes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double QtdeContratosAprovacoesPendentes(string usuario, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/QtdeContratosAprovacoesPendentes", ReplyAction="*")]
        System.Threading.Tasks.Task<double> QtdeContratosAprovacoesPendentesAsync(string usuario, string departamento, string cargo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarDescontosContrato", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarDescontosContrato(int codEmpresa, int codContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/ConsultarDescontosContrato", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarDescontosContratoAsync(int codEmpresa, int codContrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/AprovarContrato", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AprovarContrato(int codEmpresa, string codObra, int codContrato, string usuarioLogado, double valorContrato, string departamento, string cargo, int codJustificativa, string obsJustificativa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UAUTitanium/AprovarContrato", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AprovarContratoAsync(int codEmpresa, string codObra, int codContrato, string usuarioLogado, double valorContrato, string departamento, string cargo, int codJustificativa, string obsJustificativa);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsContratoMaterialServicoSoapChannel : WindowsFormsApp2.WSContratoUAU.wsContratoMaterialServicoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsContratoMaterialServicoSoapClient : System.ServiceModel.ClientBase<WindowsFormsApp2.WSContratoUAU.wsContratoMaterialServicoSoap>, WindowsFormsApp2.WSContratoUAU.wsContratoMaterialServicoSoap {
        
        public wsContratoMaterialServicoSoapClient() {
        }
        
        public wsContratoMaterialServicoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsContratoMaterialServicoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsContratoMaterialServicoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsContratoMaterialServicoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ConsultaItensContratoPendente(int codEmpresa, string codContrato) {
            return base.Channel.ConsultaItensContratoPendente(codEmpresa, codContrato);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaItensContratoPendenteAsync(int codEmpresa, string codContrato) {
            return base.Channel.ConsultaItensContratoPendenteAsync(codEmpresa, codContrato);
        }
        
        public System.Data.DataSet ConsultarAprovacoesRealizadasNoContrato(short empresa, short contrato) {
            return base.Channel.ConsultarAprovacoesRealizadasNoContrato(empresa, contrato);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarAprovacoesRealizadasNoContratoAsync(short empresa, short contrato) {
            return base.Channel.ConsultarAprovacoesRealizadasNoContratoAsync(empresa, contrato);
        }
        
        public System.Data.DataSet ConsultarContratosAprovacoesPendentes(string usuario, string departamento, string cargo) {
            return base.Channel.ConsultarContratosAprovacoesPendentes(usuario, departamento, cargo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarContratosAprovacoesPendentesAsync(string usuario, string departamento, string cargo) {
            return base.Channel.ConsultarContratosAprovacoesPendentesAsync(usuario, departamento, cargo);
        }
        
        public System.Data.DataSet ConsultarContratoAprovacaoPendente(string usuario, int empresa, string obra, int contrato, string departamento, string cargo) {
            return base.Channel.ConsultarContratoAprovacaoPendente(usuario, empresa, obra, contrato, departamento, cargo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarContratoAprovacaoPendenteAsync(string usuario, int empresa, string obra, int contrato, string departamento, string cargo) {
            return base.Channel.ConsultarContratoAprovacaoPendenteAsync(usuario, empresa, obra, contrato, departamento, cargo);
        }
        
        public double QtdeContratosAprovacoesPendentes(string usuario, string departamento, string cargo) {
            return base.Channel.QtdeContratosAprovacoesPendentes(usuario, departamento, cargo);
        }
        
        public System.Threading.Tasks.Task<double> QtdeContratosAprovacoesPendentesAsync(string usuario, string departamento, string cargo) {
            return base.Channel.QtdeContratosAprovacoesPendentesAsync(usuario, departamento, cargo);
        }
        
        public System.Data.DataSet ConsultarDescontosContrato(int codEmpresa, int codContrato) {
            return base.Channel.ConsultarDescontosContrato(codEmpresa, codContrato);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarDescontosContratoAsync(int codEmpresa, int codContrato) {
            return base.Channel.ConsultarDescontosContratoAsync(codEmpresa, codContrato);
        }
        
        public string AprovarContrato(int codEmpresa, string codObra, int codContrato, string usuarioLogado, double valorContrato, string departamento, string cargo, int codJustificativa, string obsJustificativa) {
            return base.Channel.AprovarContrato(codEmpresa, codObra, codContrato, usuarioLogado, valorContrato, departamento, cargo, codJustificativa, obsJustificativa);
        }
        
        public System.Threading.Tasks.Task<string> AprovarContratoAsync(int codEmpresa, string codObra, int codContrato, string usuarioLogado, double valorContrato, string departamento, string cargo, int codJustificativa, string obsJustificativa) {
            return base.Channel.AprovarContratoAsync(codEmpresa, codObra, codContrato, usuarioLogado, valorContrato, departamento, cargo, codJustificativa, obsJustificativa);
        }
    }
}
